

## Test case for https://issues.jboss.org/browse/JGRP-1522
## - Join A
## - Try to join B
##   - After the stack is started (so that NAKACK2 can receive messages), but before connect() returns,
##     a message is multicast from A
##   - B's NAKACK2 receives the message and queues it as is_server=false
##   - On installation of view {A,B}, the queued message is delivered // this is incorrect, should be on BECOME_SERVER
##   - B sends a response message in the *same thread*
##   --> This will trigger an exception as the channel is yet unconnected
##       (will be set to 'connected' after connect() returns)


## The rendezvous that signals the sender on A to send its message (the sender on A is blocked until the main
## thread enters the rendezvous)
RULE CreateRendezvous
CLASS BecomeServerTest
METHOD testSendingOfMsgsOnUnconnectedChannel
AT ENTRY
IF TRUE
   DO System.out.println("--> Creating rendezvous");
      createRendezvous("rv", 2, true); ## we use this RV 2 times, so it needs to be rejoinable
ENDRULE

## Delete the rendezvous when the test is done
RULE DeleteRendezvous
CLASS BecomeServerTest
METHOD testSendingOfMsgsOnUnconnectedChannel
AT EXIT
IF TRUE
   DO System.out.println("--> Deleting rendezvous");
      deleteRendezvous("rv", 2);
ENDRULE


## Blocks A from sending a message until signalled
RULE MessageSending
CLASS BecomeServerTest
METHOD sendMessage
AT ENTRY
IF rendezvous("rv") != -1
    DO System.out.println("--> A: sending message");
ENDRULE



## Signals that A's message has been received by B
RULE MessageReception
CLASS NAKACK2
METHOD up
HELPER org.jgroups.tests.helpers.BecomeServerTestHelper
AFTER INVOKE queueMessage ALL
BIND queue=$0.become_server_queue;
     is_server=$0.is_server;
     local_addr_name=org.jgroups.util.NameCache.get($0.local_addr);
IF !is_server && local_addr_name.equals("B") && messageReceived(queue)
  DO rendezvous("rv");
ENDRULE




## Blocks until A has sent the message and B has received (and queued) it
RULE InstallView
CLASS ClientGmsImpl
METHOD installView
AT ENTRY
BIND local_addr_name=org.jgroups.util.NameCache.get($0.gms.local_addr);
IF local_addr_name.equals("B") AND rendezvous("rv") != -1
   DO System.out.println("--> B: installView() waiting on rendezvous until message has been received");
      rendezvous("rv");
      System.out.println("--> B: installView() was unblocked");
ENDRULE


## Simply prints a message flushing the queue
RULE FlushQueue
CLASS NAKACK2
METHOD flushBecomeServerQueue
AT ENTRY
BIND queue=$0.become_server_queue;
     local_addr_name=org.jgroups.util.NameCache.get($0.local_addr);
IF local_addr_name.equals("B")
    DO System.out.println("--> " + $0.local_addr + ": flushing queue (" + queue.size() + " element(s))");
ENDRULE